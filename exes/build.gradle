def getDependencies(config) {
    return config.getAllDependencies().collect {
        def res = it.group + ':' + it.name + ':' + it.version
        if(!it.excludeRules.isEmpty()) {
            res += "(" + it.excludeRules.collect { it.group + ':' + it.module }.join(',') + ")"
        }
        return res
    }
}

subprojects {
    configurations {
        capsule
    }

    dependencies {
        capsule "co.paralleluniverse:capsule:$capsuleVersion"
    }

    task fatCapsule(type: Jar, dependsOn: jar) {
        archiveName = "${project.name}-fatcap.jar"

        from jar // embed our application jar

        from { configurations.runtime } // embed dependencies

        from(configurations.capsule.collect { zipTree(it) }) { include 'Capsule.class' } // we just need the single Capsule class

        manifest {
            attributes (
                'Premain-Class'       : 'Capsule',
                'Main-Class'          : 'Capsule',
                'Application-Name'    : project.name,
                'Application-Version' : project.version,
                'Application-Class'   : 'Main',
                'JVM-Args'            : '-server -XX:+AggressiveOpts -XX:-UseGCOverheadLimit -XX:+DisableExplicitGC -XX:+HeapDumpOnOutOfMemoryError -Xms=1G -Xmx=1G', //  -XX:+UseParallelOldGC -XX:+UseConcMarkSweepGC -XX:+UseG1GC -XX:MaxGCPauseMillis=10 -XX:GCTimeRatio=999
                'System-Properties'   : 'co.paralleluniverse.fibers.detectRunawayFibers=false', // 'co.paralleluniverse.fibers.verifyInstrumentation'
                'Java-Agents'         : getDependencies(configurations.quasar).iterator().next(),
                'Repositories'        : 'central https://oss.sonatype.org/content/repositories/snapshots'
            )
        }
    }

    defaultTasks 'fatCapsule'
}
